{"version":3,"sources":["webpack://MiniValine/./src/utils/initMathJax.js"],"names":["initMathJax","script","document","createElement","type","text","body","append","getScript","MathJax","Hub","Typeset","window","url","callback","condition","onload","onreadystatechange","_","isAbort","readyState","test","undefined","setTimeout","src","head"],"mappings":"gKAgEgBA,YAAT,WA/DCC,EAASC,SAASC,cAAc,UACtCF,EAAOG,KAAO,wBACdH,EAAOI,KAAP,giCA8BAH,SAASI,KAAKC,OAAON,GACrBO,EACE,kFACA,WACEC,QAAQC,IAAIC,YAEdC,OAAOH,SAvCE,IACLR,GADR,IA2CMO,EAAY,SAACK,EAAKC,EAAUC,GAChC,GAAIA,EACFD,QACK,CACL,IAAIb,EAASC,SAASC,cAAc,UACpCF,EAAOe,OAASf,EAAOgB,mBAAqB,SAACC,EAAGC,IAE5CA,IACClB,EAAOmB,YACR,kBAAkBC,KAAKpB,EAAOmB,eAE9BnB,EAAOe,OAASf,EAAOgB,mBAAqB,KAC5ChB,OAASqB,GACJH,GAAWL,GAAUS,WAAWT,EAAU,KAGnDb,EAAOuB,IAAMX,EACbX,SAASuB,KAAKlB,OAAON","file":"5.min.js","sourcesContent":["const init = () => {\r\n  const script = document.createElement('script')\r\n  script.type = 'text/x-mathjax-config'\r\n  script.text = `\r\n\t\t\tMathJax.Ajax.config.path['mhchem'] = 'https://cdn.jsdelivr.net/npm/mathjax-mhchem@3';\r\n\t\t\tMathJax.Hub.Config({\r\n\t\t\t\telements: [document.getElementsByClassName('MiniValine')],\r\n\t\t\t\ttex2jax: {\r\n\t\t\t\t  inlineMath: [ ['$', '$'], ['\\\\(', '\\\\)'] ],\r\n\t\t\t\t  processEscapes: true,\r\n\t\t\t\t  skipTags: ['script', 'noscript', 'style', 'textarea', 'pre', 'code']\r\n\t\t\t\t},\r\n\t\t\t\tTeX: {\r\n\t\t\t\t  extensions: ['[mhchem]/mhchem.js'],\r\n\t\t\t\t  equationNumbers: {\r\n\t\t\t\t\tautoNumber: 'AMS'\r\n\t\t\t\t  }\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tMathJax.Hub.Register.StartupHook('TeX Jax Ready', function() {\r\n\t\t\t\tMathJax.InputJax.TeX.prefilterHooks.Add(function(data) {\r\n\t\t\t\t  if (data.display) {\r\n\t\t\t\t\tvar next = data.script.nextSibling;\r\n\t\t\t\t\twhile (next && next.nodeName.toLowerCase() === '#text') {\r\n\t\t\t\t\t  next = next.nextSibling;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (next && next.nodeName.toLowerCase() === 'br') {\r\n\t\t\t\t\t  next.parentNode.removeChild(next);\r\n\t\t\t\t\t}\r\n\t\t\t\t  }\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\t\t\t`\r\n  document.body.append(script)\r\n  getScript(\r\n    'https://cdn.jsdelivr.net/npm/mathjax@2/MathJax.js?config=TeX-AMS-MML_HTMLorMML',\r\n    () => {\r\n      MathJax.Hub.Typeset()\r\n    },\r\n    window.MathJax\r\n  )\r\n}\r\n\r\nconst getScript = (url, callback, condition) => {\r\n  if (condition) {\r\n    callback()\r\n  } else {\r\n    let script = document.createElement('script')\r\n    script.onload = script.onreadystatechange = (_, isAbort) => {\r\n      if (\r\n        isAbort ||\r\n        !script.readyState ||\r\n        /loaded|complete/.test(script.readyState)\r\n      ) {\r\n        script.onload = script.onreadystatechange = null\r\n        script = undefined\r\n        if (!isAbort && callback) setTimeout(callback, 0)\r\n      }\r\n    }\r\n    script.src = url\r\n    document.head.append(script)\r\n  }\r\n}\r\n\r\nexport function initMathJax () {\r\n  init()\r\n}\n"],"sourceRoot":""}